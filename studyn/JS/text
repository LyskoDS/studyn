----------------------------------------------МАТЕМАТИЧЕСКИЕ ЭЛЕМЕНТЫ-----------------------------------------------
i++; - это тоже самое что и (i = i + 1)
i--; - это тоже самое что и (i = i - 1)
const remainder = 11 % 3; - "%" присваивает переменной значение (11/3) 2
a += 12; - "+=" присваивает переменной "а" значение (а + 12) фактически (a = a + 12)
a -= 6; - "-=" присваивает переменной "а" значение (а - 6) фактически (а = а - 6)
a *= 5; - "*=" присваивает переменной "а" значение (а * 5) фактически (а = а * 5)
a /= 12; - "/=" присваивает переменной "а" значение (а / 12) фактически (а = а / 12)

----------------------------------------------СИМВОЛЫ ЭКРАНИРОВАНИЯ-------------------------------------------------
\' -	одинарная кавычка
\" -	двойная кавычка
\\ -    обратная косая черта
\n -	новая строка
\t	-   вкладка
\r -	возврат каретки
\b -	граница слова
\f -	подача формы

а = b.length; - присваивает первой переменной "a" длинну строки второй переменной "b" при помощи оператора .length
const a = b[2] - присваивает переменной "а" значение третьего элемента переменной "b"
const a = b[b.length - 1]; - присваивает переменной "а" значение последнего элемента переменной "b"

----------------------------------------------РАБОТА С МАССИВАМИ----------------------------------------------------
myArray[0] = 45; - заменяет первый элемент в массиве на значение "45"
const a = myArray[2][1]; - присваивает переменной "а" значение второго элемента третьего подмассива
myArray.push([2, 1]); - добавляет в конец массива "myArray" подмассив при помощи команды .push()
myArray.pop(); - удаляет последний элемент массива "myArray" при помощи команды .pop()
const a = myArray.pop(); - возвращает удаленный последний элемент из массива переменной "а"
myArray.shift(); - удаляет первый элемент массива "myArray" при помощи команды .shift()
const a = myArray.shift(); - возвращает удаленный первый элемент из массива переменной "а"
myArray.unshift([2, 1]); - добавляет в начало массива "myArray" подмассив при помощи команды .unshift()



.hasOwnProperty(propname) - определяет есть ли в объекте это свойство

while - выполняется, пока заданное условие истинно, и останавливается, как только это условие больше не выполняется.
for (a; b; c); - цикл который выполняется определенное кол-во раз, где a является ли оператор инициализации, b является оператором условия и c является конечным выражением.


contacts.hasOwnProperty(prop) - проверяет в массиве данных contacts свойство prop
Math.random() - функция, которая генерирует случайное десятичное число между 0(включительно) и 1(исключительно)
Math.floor() - округляет число до ближайшего целого числа.
Math.floor(Math.random()*(myMax - myMin +1))+ myMin - генерировать случайное целое число, которое попадает в диапазон из двух конкретных чисел
Math.ceil() - округляет в большую сторону
Math.round() - округляет до ближайшего целого
parseInt(str) - преобразовывает строку в число
Number(str) - преобразует строку в число
parseInt(str, 2) - преобразует число из двоичного

==========================================ES 6==========================================================================

Object.freeze() - замораживает объект
args.reduce((a, b) => a + b, 0); - суммирует все элементы
const maximus = Math.max(...arr); - указывает самый большой элемент

<script type="module" src="index.js"></script> - создает скрипт в html странице
export { uppercaseString, lowercaseString }; - экспортирует функции
import { uppercaseString, lowercaseString } from "./math_functions.js"; - импортирует функции
import * as myMathModule from "./math_functions.js"; - импортирует весь файл

========================================================================================================================

.slice() - срез строки;
.toUpperCase() - перевод строки в верхний регистр;
.toLowerCase() - перевод строки в нижний регистр;
